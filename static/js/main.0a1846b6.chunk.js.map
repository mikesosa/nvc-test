{"version":3,"sources":["utils/constants.js","utils/apiClient.js","store/slices/shows.js","store/slices/index.js","store/store.js","components/templates/EmptyLayout/index.js","pages/NotFound/index.js","components/organisms/HeaderNav/index.js","components/templates/MainLayout/index.js","components/organisms/ShowCard/index.js","pages/Home/index.js","pages/ShowDetail/index.js","App.js","index.js"],"names":["API_BASE_URL","process","API_KEY","SEARCH_ALL","ApiClient","url","contentType","this","client","options","baseURL","timeout","withCredentials","headers","httpClient","axios","create","authInterceptor","config","loggerInterceptor","interceptors","request","use","response","error","Promise","reject","buildClient","conf","get","then","resolve","catch","delete","head","data","post","put","patch","apiClient","ApiInstance","getApiInstance","createInstance","showsState","shows","pages","seasonDetail","showDetail","selectedShow","searchQuery","loadingShows","errorShows","currentRequestId","undefined","slice","createSlice","name","initialState","reducers","setSelected","state","payload","fetchingShowsStarted","fetchingShowsSuccess","results","currentPage","page","total_pages","total_results","fetchingShowsError","setSearchQuery","fetchingDetailStarted","fetchingDetailSuccess","fetchingDetailError","fetchingSeasonStarted","fetchingSeasonSuccess","fetchingSeasonError","extraReducers","actions","showsSelector","getShows","searchPage","dispatch","a","res","message","getDetail","showId","mediaType","getSeason","tvId","seasonNumber","setSelectedShow","combinedReducer","combineReducers","showsReducer","customizedMiddleware","getDefaultMiddleware","serializableCheck","persistConfig","key","storage","stateReconciler","autoMergeLevel2","pReducer","persistReducer","rootReducer","store","configureStore","reducer","middleware","persistor","persistStore","Content","Layout","EmptyLayout","children","style","padding","minHeight","NotFound","href","Search","Input","Header","HeaderNav","path","useRouteMatch","history","useHistory","useDispatch","useSelector","antIcon","LoadingOutlined","color","spin","className","LeftCircleOutlined","indicator","placeholder","allowClear","onSearch","value","push","width","MainLayout","Meta","Card","ShowCard","item","useState","showDescription","setShowDescription","handleClick","show","id","onClick","hoverable","onMouseEnter","onMouseLeave","cover","alt","src","poster_path","backdrop_path","popularity","title","Home","showsList","setShowsList","useEffect","concat","fetchShows","queryPage","document","documentElement","scrollTop","initialLoad","pageStart","loadMore","warning","content","marginTop","hasMore","useWindow","grid","gutter","column","dataSource","renderItem","Item","TabPane","Tabs","ShowDetail","details","setDetails","selectedSeason","setSelectedSeason","fetchDetail","split","media_type","e","console","fetchSeason","parseInt","Grid","textAlign","original_name","original_title","type","defaultActiveKey","activeKey","onChange","tab","seasons","map","season","idx","season_number","itemLayout","episodes","avatar","icon","FireOutlined","description","overview","genres","genre","original_language","release_date","App","exact","to","ReactDOM","render","loading","getElementById"],"mappings":"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","file":"static/js/main.0a1846b6.chunk.js","sourcesContent":["// Constants can be improved... laziness lol\nexport const API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nexport const API_KEY = process.env.REACT_APP_API_KEY;\nexport const SEARCH_MULTI = process.env.REACT_APP_SEARCH_MULTI;\nexport const SEARCH_ALL = `${API_BASE_URL}${SEARCH_MULTI}&api_key=${API_KEY}`;\n","import axios from 'axios';\nimport { API_BASE_URL } from './constants';\n\nconst buildClient = (\n  baseUrl = API_BASE_URL,\n  contentType = 'application/json'\n) => {\n  /**\n   * Axios basic configuration\n   * Some general configuration can be added like timeout, headers, params etc. More details can be found on https://github.com/axios/axios\n   * */\n  const options = {\n    baseURL: baseUrl,\n    timeout: 1000 * 30,\n    withCredentials: false,\n    headers: {\n      'Content-Type': contentType\n    }\n  };\n\n  /**\n   * Creating the instance of Axios\n   * It is because, in large scale application we may need to consume APIs from more than single server,\n   * So, may need to create multiple http client with different config\n   * Only this client will be used rather than axios in the application\n   * */\n  const httpClient = axios.create(options);\n\n  /**\n   * Auth interceptors\n   * @description Configuration related to AUTH token can be done in interceptors.\n   * Currently it is just doing nothing but idea to to show the capability of axios and its interceptors\n   * In future, interceptors can be created into separate files and consumed into multiple http clients\n   * @param {*} config\n   */\n  const authInterceptor = (config) => {\n    return config;\n  };\n\n  const loggerInterceptor = (config) => {\n    /** Add logging here */\n    return config;\n  };\n\n  /** Adding the request interceptors */\n  httpClient.interceptors.request.use(authInterceptor);\n  httpClient.interceptors.request.use(loggerInterceptor);\n\n  /** Adding the response interceptors */\n  httpClient.interceptors.response.use(\n    (response) => {\n      return response;\n    },\n    (error) => {\n      /** Do something with response error */\n      return Promise.reject(error);\n    }\n  );\n  return httpClient;\n};\n\nclass ApiClient {\n  constructor(url, contentType) {\n    this.client = buildClient(url, contentType);\n  }\n\n  get(url, conf = {}) {\n    return this.client\n      .get(url, conf)\n      .then((response) => Promise.resolve(response))\n      .catch((error) => Promise.reject(error));\n  }\n\n  delete(url, conf = {}) {\n    return this.client\n      .delete(url, conf)\n      .then((response) => Promise.resolve(response))\n      .catch((error) => Promise.reject(error));\n  }\n\n  head(url, conf = {}) {\n    return this.client\n      .head(url, conf)\n      .then((response) => Promise.resolve(response))\n      .catch((error) => Promise.reject(error));\n  }\n\n  options(url, conf = {}) {\n    return this.client\n      .options(url, conf)\n      .then((response) => Promise.resolve(response))\n      .catch((error) => Promise.reject(error));\n  }\n\n  post(url, data = {}, conf = {}) {\n    return this.client\n      .post(url, data, conf)\n      .then((response) => Promise.resolve(response))\n      .catch((error) => Promise.reject(error));\n  }\n\n  put(url, data = {}, conf = {}) {\n    return this.client\n      .put(url, data, conf)\n      .then((response) => Promise.resolve(response))\n      .catch((error) => Promise.reject(error));\n  }\n\n  patch(url, data = {}, conf = {}) {\n    return this.client\n      .patch(url, data, conf)\n      .then((response) => Promise.resolve(response))\n      .catch((error) => Promise.reject(error));\n  }\n}\n\nconst ApiClientSingleton = (function getInstances() {\n  let ApiInstance;\n\n  function createInstance(url, contentType) {\n    const object = new ApiClient(url, contentType);\n    return object;\n  }\n\n  return {\n    getApiInstance(url, contentType) {\n      if (!ApiInstance || url) {\n        ApiInstance = createInstance(url, contentType);\n      }\n      return ApiInstance;\n    }\n  };\n})();\n\nexport default ApiClientSingleton;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { SEARCH_ALL, API_KEY, API_BASE_URL } from '../../utils/constants';\nimport { ApiClientSingleton } from '../../utils';\n\nconst apiClient = ApiClientSingleton.getApiInstance();\n\nconst showsState = {\n  shows: [],\n  pages: {},\n  seasonDetail: null,\n  showDetail: null,\n  selectedShow: null,\n  searchQuery: '',\n  loadingShows: false,\n  errorShows: null,\n  currentRequestId: undefined\n};\n\nconst slice = createSlice({\n  name: 'shows',\n  initialState: showsState,\n  reducers: {\n    setSelected: (state, { payload }) => {\n      state.selectedShow = payload;\n    },\n    fetchingShowsStarted: (state) => {\n      state.loadingShows = true;\n    },\n    fetchingShowsSuccess: (state, { payload }) => {\n      state.shows = payload.results;\n      state.pages = {\n        currentPage: payload.page,\n        total_pages: payload.total_pages,\n        total_results: payload.total_pages\n      };\n      state.loadingShows = false;\n      state.errorShows = null;\n    },\n    fetchingShowsError: (state, { payload }) => {\n      state.shows = [];\n      state.errorShows = payload;\n      state.loadingShows = false;\n    },\n    setSearchQuery: (state, { payload }) => {\n      state.searchQuery = payload;\n    },\n    fetchingDetailStarted: (state) => {\n      state.loadingShows = true;\n    },\n    fetchingDetailSuccess: (state, { payload }) => {\n      state.showDetail = payload;\n      state.loadingShows = false;\n      state.errorShows = null;\n    },\n    fetchingDetailError: (state, { payload }) => {\n      state.showDetail = null;\n      state.errorShows = payload;\n      state.loadingShows = false;\n    },\n    fetchingSeasonStarted: (state) => {\n      state.loadingShows = true;\n    },\n    fetchingSeasonSuccess: (state, { payload }) => {\n      state.seasonDetail = payload;\n      state.loadingShows = false;\n      state.errorShows = null;\n    },\n    fetchingSeasonError: (state, { payload }) => {\n      state.seasonDetail = null;\n      state.errorShows = payload;\n      state.loadingShows = false;\n    }\n  },\n  extraReducers: {}\n});\n\nexport default slice.reducer;\n\nconst {\n  fetchingShowsStarted,\n  fetchingShowsSuccess,\n  fetchingShowsError,\n  setSearchQuery,\n  fetchingDetailStarted,\n  fetchingDetailSuccess,\n  fetchingDetailError,\n  fetchingSeasonStarted,\n  fetchingSeasonError,\n  fetchingSeasonSuccess,\n  setSelected\n  // reset\n} = slice.actions;\n\nexport const showsSelector = (state) => state.shows;\n\n// Get shows\nexport const getShows = ({ searchQuery, searchPage }) => async (dispatch) => {\n  dispatch(fetchingShowsStarted());\n  dispatch(setSearchQuery({ searchQuery, searchPage }));\n  try {\n    const res = await apiClient.get(\n      `${SEARCH_ALL}&query=${searchQuery}&page=${searchPage}`\n    );\n    dispatch(fetchingShowsSuccess(res.data));\n  } catch (e) {\n    dispatch(fetchingShowsError(e.message));\n  }\n};\n\n// Get a show in detail\nexport const getDetail = ({ showId, mediaType }) => async (dispatch) => {\n  dispatch(fetchingDetailStarted());\n  try {\n    const res = await apiClient.get(\n      `${API_BASE_URL}/${mediaType}/${showId}?api_key=${API_KEY}&external_source=imdb_id`\n    );\n    dispatch(fetchingDetailSuccess(res.data));\n  } catch (e) {\n    dispatch(fetchingDetailError(e.message));\n  }\n};\n\n// Get a season detail\nexport const getSeason = ({ tvId, seasonNumber }) => async (dispatch) => {\n  dispatch(fetchingSeasonStarted());\n  try {\n    const res = await apiClient.get(\n      `${API_BASE_URL}/tv/${tvId}/season/${seasonNumber}?api_key=${API_KEY}`\n    );\n    dispatch(fetchingSeasonSuccess(res.data));\n  } catch (e) {\n    dispatch(fetchingSeasonError(e.message));\n  }\n};\n\n// Set the selected show globally\nexport const setSelectedShow = (payload) => async (dispatch) => {\n  dispatch(setSelected(payload));\n};\n","import { combineReducers } from '@reduxjs/toolkit';\nimport showsReducer from './shows';\n\nconst combinedReducer = combineReducers({\n  shows: showsReducer\n});\n\nexport default combinedReducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { getDefaultMiddleware } from '@reduxjs/toolkit';\nimport rootReducer from './slices';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\n\nconst customizedMiddleware = getDefaultMiddleware({\n  serializableCheck: false\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage: storage,\n  stateReconciler: autoMergeLevel2\n};\n\nconst pReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: pReducer,\n  middleware: customizedMiddleware\n});\n\nexport const persistor = persistStore(store);\nexport default store;\n","import React from 'react';\nimport { Layout } from 'antd';\nimport { node } from 'prop-types';\n\nconst { Content } = Layout;\n\nfunction EmptyLayout({ children }) {\n  return (\n    <Layout>\n      <Content style={{ padding: '2rem', minHeight: '100vh' }}>\n        {children}\n      </Content>\n    </Layout>\n  );\n}\n\nEmptyLayout.propTypes = {\n  children: node.isRequired\n};\n\nexport default EmptyLayout;\n","import React from 'react';\nimport EmptyLayout from '../../components/templates/EmptyLayout';\n\nfunction NotFound() {\n  return (\n    <EmptyLayout>\n      <p>\n        404 page not found <a href=\"/\">go home</a>\n      </p>\n    </EmptyLayout>\n  );\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { Layout, Input, Spin } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouteMatch, useHistory } from 'react-router-dom';\nimport { getShows, showsSelector } from '../../../store/slices/shows';\nimport { LoadingOutlined, LeftCircleOutlined } from '@ant-design/icons';\nimport './HeaderNav.less';\n\nconst { Search } = Input;\nconst { Header } = Layout;\n\nfunction HeaderNav() {\n  const { path } = useRouteMatch();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { loadingShows } = useSelector(showsSelector);\n  const antIcon = <LoadingOutlined style={{ color: '#FFF' }} spin />;\n\n  // Handle search\n  const onSearch = (value) => {\n    if (path !== '/') history.push('/nvc-test');\n    if (value) dispatch(getShows({ searchQuery: value, searchPage: 1 }));\n  };\n\n  return (\n    <Header className=\"header-nav\">\n      <div className=\"logo\">\n        <a href=\"/nvc-test\">SHOWS</a>\n        {path !== '/nvc-test' && (\n          <a href=\"/nvc-test\" className=\"return-btn\">\n            <LeftCircleOutlined />\n          </a>\n        )}\n      </div>\n      <div className=\"menu-search\">\n        {loadingShows && (\n          <div className=\"demo-loading-container\">\n            <Spin indicator={antIcon} />\n          </div>\n        )}\n        <Search\n          placeholder=\"Type a movie name\"\n          allowClear\n          onSearch={onSearch}\n          style={{ width: 300 }}\n        />\n      </div>\n    </Header>\n  );\n}\n\nexport default HeaderNav;\n","import React from 'react';\nimport { Layout } from 'antd';\nimport HeaderNav from '../../organisms/HeaderNav';\nimport { node } from 'prop-types';\n\nconst { Content } = Layout;\n\nfunction MainLayout({ children }) {\n  return (\n    <Layout>\n      <HeaderNav />\n      <Content style={{ padding: '6rem 2rem 2rem 2rem', minHeight: '100vh' }}>\n        {children}\n      </Content>\n    </Layout>\n  );\n}\n\nMainLayout.propTypes = {\n  children: node.isRequired\n};\n\nexport default MainLayout;\n","import React, { useState } from 'react';\nimport { Card } from 'antd';\nimport { object } from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { setSelectedShow } from '../../../store/slices/shows';\nimport './ShowCard.less';\n\nconst { Meta } = Card;\n\nfunction ShowCard({ item }) {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { path } = useRouteMatch();\n  const defaultImg = '/v5D7K4EHuQHFSjveq8LGxdSfrGS.jpg'; // Fallback img\n  const [showDescription, setShowDescription] = useState(false);\n\n  // Handle click on show\n  const handleClick = async (show) => {\n    await dispatch(setSelectedShow(show));\n    history.push(`${path}/detail/${show.id}`);\n  };\n\n  return (\n    <Card\n      onClick={() => handleClick(item)}\n      hoverable\n      onMouseEnter={() => setShowDescription(true)}\n      onMouseLeave={() => setShowDescription(false)}\n      cover={\n        <img\n          alt=\"example\"\n          src={`https://image.tmdb.org/t/p/w500${\n            item.poster_path\n              ? item.poster_path\n              : item.backdrop_path\n              ? item.backdrop_path\n              : defaultImg\n          }`}\n        />\n      }>\n      {showDescription && (\n        <div className=\"description-cover\">\n          Rating: <span>{item.popularity}</span>\n        </div>\n      )}\n      <Meta title={item.title ? item.title : item.name} />\n    </Card>\n  );\n}\n\nShowCard.propTypes = {\n  item: object.isRequired\n};\n\nexport default ShowCard;\n","import React, { useEffect, useState } from 'react';\nimport { List, message } from 'antd';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { useDispatch, useSelector } from 'react-redux';\nimport MainLayout from '../../components/templates/MainLayout';\nimport ShowCard from '../../components/organisms/ShowCard';\nimport { getShows, showsSelector } from '../../store/slices/shows';\nimport './Home.less';\n\nfunction Home() {\n  const dispatch = useDispatch();\n  const [showsList, setShowsList] = useState([]);\n  const { searchQuery, shows, pages } = useSelector(showsSelector);\n\n  // Concatenate more results on scrolling\n  useEffect(() => {\n    if (shows && pages.currentPage !== 1) {\n      let temp = showsList;\n      setShowsList(temp.concat(shows));\n    } else {\n      setShowsList(shows);\n    }\n  }, [shows, pages]);\n\n  // Fetch shows depending on query\n  const fetchShows = async (queryPage) => {\n    try {\n      await dispatch(\n        getShows({\n          searchQuery: searchQuery.searchQuery,\n          searchPage: queryPage\n        })\n      );\n      document.documentElement.scrollTop = 0;\n    } catch (e) {\n      message.error(e);\n    }\n  };\n\n  // Handle scrolling down\n  const handleInfiniteOnLoad = () => {\n    if (pages.total_pages === pages.currentPage) {\n      message.warning({\n        content: 'All results loaded',\n        style: {\n          marginTop: '90vh'\n        }\n      });\n    } else {\n      fetchShows(pages.currentPage + 1);\n    }\n  };\n\n  return (\n    <MainLayout>\n      <div className=\"demo-infinite-container\">\n        <InfiniteScroll\n          initialLoad={false}\n          pageStart={0}\n          loadMore={handleInfiniteOnLoad}\n          hasMore={true}\n          useWindow={false}>\n          <List\n            grid={{ gutter: 16, column: 6 }}\n            dataSource={showsList}\n            renderItem={(item) => (\n              <List.Item>\n                <ShowCard item={item} />\n              </List.Item>\n            )}\n          />\n        </InfiniteScroll>\n      </div>\n    </MainLayout>\n  );\n}\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { Card, Tabs, List, Avatar } from 'antd';\nimport { FireOutlined } from '@ant-design/icons';\nimport { useRouteMatch } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport MainLayout from '../../components/templates/MainLayout';\nimport { getDetail, showsSelector, getSeason } from '../../store/slices/shows';\nimport './ShowDetail.less';\n\nconst { Meta } = Card;\nconst { TabPane } = Tabs;\n\nfunction ShowDetail() {\n  const [details, setDetails] = useState(null);\n  const [selectedSeason, setSelectedSeason] = useState('0');\n  const { url } = useRouteMatch();\n  const dispatch = useDispatch();\n  const {\n    loadingShows,\n    showDetail,\n    selectedShow,\n    seasonDetail,\n    errorShows\n  } = useSelector(showsSelector);\n\n  // Get selected show detail\n  const fetchDetail = async () => {\n    try {\n      dispatch(\n        getDetail({\n          showId: url.split('/')[3],\n          mediaType: selectedShow.media_type\n        })\n      );\n    } catch (e) {\n      // eslint-disable-next-line\n      console.error(e);\n    }\n  };\n\n  // In case of tv show get specific season\n  const fetchSeason = async (tvId, seasonNumber) => {\n    try {\n      dispatch(\n        getSeason({\n          tvId,\n          seasonNumber\n        })\n      );\n    } catch (e) {\n      // eslint-disable-next-line\n      console.error(e);\n    }\n  };\n\n  // Call fetch details on load\n  useEffect(() => {\n    fetchDetail();\n  }, []);\n\n  // If detail then set them locally in the component to better performance\n  useEffect(() => {\n    if (showDetail) setDetails(showDetail);\n  }, [showDetail]);\n\n  // If a tv show call fetch season\n  useEffect(() => {\n    if (details) fetchSeason(details.id, parseInt(selectedSeason) + 1);\n  }, [selectedSeason, details]);\n\n  // TV show details\n  const tvDetail = () => (\n    <Tabs\n      type=\"card\"\n      defaultActiveKey={selectedSeason}\n      activeKey={selectedSeason}\n      onChange={(tab) => setSelectedSeason(tab)}>\n      {errorShows && <p>{errorShows}</p>}\n      {seasonDetail &&\n        details.seasons.map((season, idx) => {\n          return (\n            <TabPane\n              tab={`Season ${season.season_number}`}\n              key={idx}\n              className=\"tab-content\">\n              <h3>{season.name}</h3>\n              <List\n                itemLayout=\"horizontal\"\n                dataSource={seasonDetail.episodes}\n                renderItem={(item, idx) => (\n                  <List.Item>\n                    <List.Item.Meta\n                      avatar={<Avatar icon={<FireOutlined />} />}\n                      title={\n                        <span>\n                          Episode {idx}: - {item.name} -\n                        </span>\n                      }\n                      description={item.overview}\n                    />\n                  </List.Item>\n                )}\n              />\n            </TabPane>\n          );\n        })}\n    </Tabs>\n  );\n\n  // Movie details\n  const movieDetail = () => {\n    return (\n      <>\n        <h3>Genres:</h3>\n        <ul>\n          {details.genres.map((genre) => (\n            <li key={genre.id}>{genre.name}</li>\n          ))}\n        </ul>\n        <h3>Overview:</h3>\n        <p>{details.overview}</p>\n        <h3>\n          Original language:{' '}\n          <span className=\"uppercase\">{details.original_language}</span>\n        </h3>\n        <h3>\n          Release date:{' '}\n          <span className=\"uppercase\">{details.release_date}</span>\n        </h3>\n      </>\n    );\n  };\n\n  return (\n    <MainLayout>\n      {loadingShows && 'Loading..'}\n      {details && (\n        <Card className=\"card-detail\">\n          <Card.Grid\n            hoverable={false}\n            style={{ width: '30%', textAlign: 'center' }}>\n            <Card\n              cover={\n                <img\n                  alt=\"example\"\n                  src={\n                    details\n                      ? `https://image.tmdb.org/t/p/w500${details.poster_path}`\n                      : ''\n                  }\n                />\n              }>\n              <Meta\n                title={\n                  details.name\n                    ? details.name\n                    : details.original_name\n                    ? details.original_name\n                    : details.original_title\n                }\n              />\n            </Card>\n          </Card.Grid>\n          <Card.Grid\n            hoverable={false}\n            style={{ width: '70%', padding: '2rem' }}>\n            {selectedShow.media_type === 'tv' && details\n              ? tvDetail()\n              : movieDetail()}\n          </Card.Grid>\n        </Card>\n      )}\n    </MainLayout>\n  );\n}\n\nexport default ShowDetail;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom';\nimport Home from './pages/Home';\nimport NotFound from './pages/NotFound';\nimport ShowDetail from './pages/ShowDetail';\nimport './App.less';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Redirect to=\"/nvc-test\" />\n        </Route>\n        <Route path=\"/nvc-test/detail/:id\">\n          <ShowDetail />\n        </Route>\n        <Route exact path=\"/nvc-test\">\n          <Home />\n        </Route>\n        <Route path=\"*\">\n          <NotFound />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store, { persistor } from './store/store';\nimport NotFound from './pages/NotFound';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={<NotFound />} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}